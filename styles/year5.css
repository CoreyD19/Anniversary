@import url('base.css');
@import url('year1.css');
@import url('year2.css');
@import url('year3.css');
@import url('year4.css');

/* --- General Puzzle Section Styles --- */
.puzzle-section {
  background-color: #292929;
  padding: 2rem;
  border-radius: 10px;
  box-shadow: 0 4px 12px rgba(255, 110, 199, 0.2);
  margin-bottom: 2rem;
}

.puzzle-section h2 {
  text-align: center;
  color: #ffb6e6;
  margin-bottom: 1rem;
}

.puzzle-section p {
  text-align: center;
  margin-bottom: 1.5rem;
  font-size: 1rem;
  color: #ffcce6;
}

#generateWordSearchBtn {
  padding: 0.6rem 1.2rem;
  background-color: #e38ea0;
  border: none;
  color: white;
  font-size: 1rem;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

#generateWordSearchBtn:hover {
  background-color: #d46c8b;
}

/* --- Word Search Grid Styles (Desktop First) --- */
.puzzle-grid {
  display: grid;
  /* Default for desktop: 12 columns, each 35px wide.
     This will determine the base size of the squares. */
  grid-template-columns: repeat(12, 35px);
  gap: 4px;
  justify-content: center; /* Center the grid on larger screens */
  margin: 1rem auto;
  overflow-x: hidden; /* Hide horizontal scroll on desktop, will change on mobile */
}

/* Base styles for individual grid cells */
.puzzle-grid div {
  /* Set a fixed aspect ratio for desktop, and let the grid itself define width/height */
  aspect-ratio: 1 / 1; /* Makes the box perfectly square based on its width */
  background-color: #1e1e1e;
  color: #ffcce6;
  border: 1px solid #ffb6e6;
  font-size: 1.1rem;
  font-weight: bold;
  display: flex; /* Use flexbox for robust centering of content */
  align-items: center;
  justify-content: center;
  border-radius: 4px;
  box-sizing: border-box; /* Include padding/border in element's total size */
  user-select: none; /* Prevent text selection */
}

/* Style for the letter inside the div (ensure it's not absolutely positioned now) */
.puzzle-grid div span {
    /* No special positioning needed, flexbox on parent handles centering */
    /* You might want to adjust font-size here for very specific cases if needed */
}


.puzzle-grid .found {
  background-color: #a4dcbe;
  color: #ffffff;
}

#word-list-display {
  margin-top: 1rem;
  font-size: 1rem;
  font-style: italic;
  color: #4b2e83;
  text-align: center; /* Ensure list is centered */
}
.word-to-find {
  display: inline-block;
  margin: 0 6px;
  font-weight: bold;
  color: #ffcce6;
}

.tile.selected {
  outline: 2px solid #ffd700;
  background-color: #444;
}

.tile.found {
  background-color: #a4dcbe;
  color: #fff;
}
.confetti {
  position: fixed;
  top: -10px;
  font-size: 20px;
  animation: fall 3s linear forwards;
  z-index: 9999;
}

@keyframes fall {
  to {
    transform: translateY(100vh) rotate(360deg);
    opacity: 0;
  }
}


/* ---------------------------------------------------- */
/* RESPONSIVE MOBILE ADJUSTMENTS              */
/* ---------------------------------------------------- */

@media (max-width: 768px) {
  .puzzle-grid {
    /* On mobile, use --grid-cols-mobile from JS to define the number of columns.
       Each column takes up an equal fraction, but with a minimum size. */
    grid-template-columns: repeat(var(--grid-cols-mobile, 12), minmax(28px, 1fr));
    gap: 1px; /* Very small gap on mobile */
    justify-content: start; /* Align to start for horizontal scrolling */
    padding-bottom: 0.5rem; /* Add some bottom padding if it scrolls */
    overflow-x: auto; /* Allow horizontal scrolling if content overflows */
    -webkit-overflow-scrolling: touch; /* Smoother scrolling on iOS */
    padding-left: 5px; /* Small padding inside the grid container itself */
    padding-right: 5px;
    box-sizing: border-box; /* Ensure padding is included in the grid's total width */
    width: 100%; /* Ensure grid takes up full available width */
  }

  .puzzle-grid div {
    /* On mobile, let the grid determine the size.
       aspect-ratio will keep it square. */
    min-width: 28px; /* Minimum width for readability on mobile */
    min-height: 28px; /* Minimum height, aspect-ratio will help ensure this */
    font-size: 0.8rem; /* Smaller font for mobile */
    padding: 0; /* Remove padding if aspect-ratio is handling size */
  }

  /* Adjustments for the puzzle section padding on smaller screens */
  .puzzle-section {
    padding: 1rem 0.5rem; /* Reduced horizontal padding */
    margin: 1rem 0.5rem; /* Adjusted margins for mobile to prevent touching edges */
    box-shadow: none; /* Reduce heavy shadows on small screens */
  }

  /* Smaller button on mobile */
  #generateWordSearchBtn {
    padding: 0.4rem 0.8rem;
    font-size: 0.85rem;
  }

  #word-list-display {
    font-size: 0.9rem;
    padding: 0 0.5rem; /* Ensure words don't overflow */
  }
}

/* Specific adjustments for very small screens (e.g., iPhone SE, older Androids) */
@media (max-width: 360px) { /* Even smaller breakpoint for very narrow phones */
  .puzzle-grid {
    grid-template-columns: repeat(var(--grid-cols-mobile, 12), minmax(24px, 1fr)); /* Even smaller min-width */
  }
  .puzzle-grid div {
    min-width: 24px;
    min-height: 24px;
    font-size: 0.7rem; /* Even smaller font */
  }
}